plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}
apply from:"D:\\Android\\Project\\SkinSwitch\\skinPack-cartoon\\test.gradle"

android {
    compileSdk 32

    defaultConfig {

        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        release {
            buildConfigField("int", "age", "1")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {
    implementation project(":SkinCore")
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    implementation "androidx.navigation:navigation-fragment-ktx:2.5.1"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.1"
}
/*task gg {
    System.out.println(222)
    doFirst {
        var is = Runtime.runtime.exec(new String[]{"cmd", "/c", "gradlew skinPack-cartoon:assembleDebug"})
        is.waitFor()
    }
}*/
task runfirst {
    //System.out.println("0----->"+getParent().project("skinPack-cartoon").getAllTasks(false))
    //getParent().project("skinPack-cartoon").tasks.getByName("assemble").execute()
    /*getParent().project("SkinCore").getAllTasks(true).forEach(f-> {
        System.out.println(f.name)
    })*/
    //commandLine "echo 2222"
//    System.out.println("gradlew skinPack-cartoon:assemble".execute())
    doFirst {
        var f = 0
    }

}
//buildSkinModule("1", "2", "3")
buildSkinModule("skinPack-cartoon", "7", "")
// 优先于主工程执行
afterEvaluate {
    assembleDebug.dependsOn(skinBuild)
}


